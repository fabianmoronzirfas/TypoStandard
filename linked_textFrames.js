// written by fabiantheblind// http://www.the-moron.net// how to build linked textframes// first we need a doc with some preferencesvar d = app.documents.add()with (d.documentPreferences) {		pageWidth = 300;		pageHeight = 300;	}with(d.marginPreferences){	top = 20;	left = 20;	right = 20;	bottom = 20;}// store the prefs in variables for better handlingvar mp = d.marginPreferences;var dp = d.documentPreferences;// the firat pagevar p = d.pages[0];// now build some textframes// and do it a bit stylish ;)var height = dp.pageHeight - mp.top*2;var width = dp.pageWidth - mp.left*2;var g = 10; // guttervar s = 30; // size of the boxfor(var y = mp.top + 5; y < height; y = y + s  ){		for(var x = mp.left+ 5; x < width; x = x + s ){				var tf = p.textFrames.add();		var y1 = y + g;		var x1 = x + g;		tf.geometricBounds = [y1,x1,y+s,x+s];						}			}// THIS IS THE TRICK// as long as there are textframes use the // previousTextFrame method// the first one has no previous textframe// i is the countervar i = 0;while(i < p.textFrames.length){	if(i == 0){		// do nothing		}else{			p.textFrames[i].previousTextFrame = p.textFrames[i-1];		}	i++;	}// you are done they are all linked// the is only styling again// store the paragraphs in  avariable for better handlingvar pars = p.textFrames.everyItem().paragraphs.everyItem();//fill it with some placeholder textp.textFrames[0].contents = TextFrameContents.placeholderText;// apply some formattingpars.pointSize = 9;pars.leading = 9;pars.justification = Justification.RIGHT_ALIGN;pars.appliedFont = "Arial";// to be shure to have all textframes filled with text// add some more textp.textFrames[0].contents = TextFrameContents.placeholderText;// now create a random value for selecting a textframevar val = Math.floor(Math.random()* p.textFrames.length);// this is the random textframevar tf = p.textFrames[val];// buffer the positionvar tmp1 = tf.geometricBounds[0];var tmp2 = tf.geometricBounds[1];var tmp3 = tf.geometricBounds[2];var tmp4 = tf.geometricBounds[3];// add some offsetvar o = 3; // offset// push the changed values backtf.geometricBounds = [tmp1 - o,tmp2 - o,tmp3 + o,tmp4 + o];alert("Done"); 